name: CI

on:
  merge_group:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  typos:
    name: Check Typos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Typos
        uses: crate-ci/typos@v1.34.0

  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain with rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt --check
        run: cargo fmt --all -- --check

  lint:
    name: Lint and Documentation Check
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain with clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Run Clippy (Linting)
        run: cargo clippy --tests --examples -- -D warnings

      - name: Run Rustdoc (Documentation Check)
        run: cargo rustdoc -- -D warnings

  test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends libasound2-dev libudev-dev protobuf-compiler libprotobuf-dev

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Run Cargo Tests
        run: cargo test
